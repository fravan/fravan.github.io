---
interface Props {
  name: string;
  price: number;
}

const { name, price } = Astro.props;
---

<button
  type="button"
  x-data={`product("${name}", ${price})`}
  class="grid rounded border bg-white p-0 text-sm hover:bg-slate-200"
  :class="{ 'border-slate-600': quantity > 0, 'border-red-600': quantity < 0 }"
  style="grid-template-columns: max-content 1fr;"
  @order-reset.window="reset"
  @touchstart.prevent="startClick"
  @touchend="endClick"
  @touchleave="abortClick"
  @mousedown="startClick"
  @mouseup="endClick"
  @mouseleave="abortClick"
>
  <input hidden class="hidden" name={name} :value="quantity" />
  <div
    x-cloak
    class="col-span-full col-start-1 row-start-1 h-full bg-slate-600 transition-all duration-[50ms]"
    :style="{ 'width': `calc(${clickingProgress}*100%)` }"
  >
  </div>
  <div
    class="col-start-1 row-start-1 flex items-center justify-center px-2 py-1 text-white"
    :class="{ 'bg-slate-600': quantity > 0, 'bg-red-600': quantity < 0 }"
    x-cloak
    x-show="quantity != 0"
    x-text="quantity"
  >
  </div>
  <div
    class="col-start-2 row-start-1 grow px-2 py-1 text-left transition-colors duration-200"
    :class="{ 'text-white': clickingProgress > 0}"
  >
    <p>{name}</p>
    <lce-price class="text-xs" price={price}></lce-price>
  </div>
</button>
